name: Build Windows CLI

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  win-build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build deps
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path "requirements.txt") { pip install -r requirements.txt }
          pip install pyinstaller

      - name: Build EXE (PyInstaller)
        shell: pwsh
        run: pyinstaller --onefile --name alak cli/main.py

      - name: Package (zip + checksums + README)
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path pkg | Out-Null
          Copy-Item -Path "dist/alak.exe" -Destination "pkg/alak.exe" -Force
          $ver = $env:GITHUB_REF_NAME
          $zip = "pkg/alak-win64-$ver.zip"
          Compress-Archive -Path "pkg/alak.exe" -DestinationPath $zip -Force
          $sha = Get-FileHash -Path $zip -Algorithm SHA256
          "$($sha.Hash)  $(Split-Path -Leaf $zip)" | Out-File -FilePath "pkg/SHA256SUMS.txt" -Encoding ascii
          @(
            "ALAK Windows CLI $ver",
            "",
            "How to use:",
            "1) Unzip the archive.",
            "2) Open PowerShell in the unzipped folder.",
            "3) Run: .\alak.exe --help",
            "",
            "SmartScreen: If warned, click 'More info' -> 'Run anyway'."
          ) | Set-Content -Path "pkg/README_windows.txt" -Encoding UTF8

      - name: Publish release (attach assets)
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          allowUpdates: true
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: |
            pkg/*.zip
            pkg/SHA256SUMS.txt
            pkg/README_windows.txt
