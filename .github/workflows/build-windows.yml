name: Build Windows CLI & GUI

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  win-build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set VERSION env
        shell: pwsh
        run: echo "VERSION=$env:GITHUB_REF_NAME" >> $env:GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path "requirements.txt") { pip install -r requirements.txt }
          pip install pyinstaller PyQt6 numpy soundfile sounddevice msgpack

      - name: Build CLI (PyInstaller)
        shell: pwsh
        run: pyinstaller --onefile --name alak cli/main.py

      - name: Build GUI (PyInstaller, PyQt6)
        shell: pwsh
        run: >
          pyinstaller --noconsole --onefile --name ALAK_GUI
          --collect-all PyQt6
          --collect-data soundfile
          app/alak_qt.py

      - name: Package zip + README + checksums
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path pkg | Out-Null
          Copy-Item "dist/alak.exe" "pkg/alak.exe" -Force
          Copy-Item "dist/ALAK_GUI.exe" "pkg/ALAK_GUI.exe" -Force
          $ver = $env:VERSION
          $readme = @(
            "ALAK for Windows $ver",
            "",
            "GUI:",
            "  Double-click ALAK_GUI.exe",
            "",
            "CLI:",
            "  Open PowerShell here and run: .\alak.exe --help",
            "",
            "Note: If SmartScreen warns, click 'More info' -> 'Run anyway'."
          )
          Set-Content -Path "pkg/README_windows.txt" -Value $readme -Encoding UTF8
          $zip = "pkg/alak-windows-$ver.zip"
          if (Test-Path $zip) { Remove-Item $zip -Force }
          Compress-Archive -Path @("pkg/alak.exe","pkg/ALAK_GUI.exe","pkg/README_windows.txt") -DestinationPath $zip -Force
          $sha = Get-FileHash -Path $zip -Algorithm SHA256
          "$($sha.Hash)  $(Split-Path -Leaf $zip)" | Out-File -FilePath "pkg/SHA256SUMS.txt" -Encoding ascii

      - name: Publish release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          allowUpdates: true
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: |
            pkg/*.zip
            pkg/SHA256SUMS.txt
            pkg/README_windows.txt
