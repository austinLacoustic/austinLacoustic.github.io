name: Build Windows GUI + CLI

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  win-build:
    runs-on: windows-latest
    env:
      VERSION: ${{ github.ref_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        shell: pwsh
        run: |
          python -m pip install --upgrade pip wheel
          if (Test-Path "requirements.txt") { pip install -r requirements.txt }
          pip install pyinstaller PyQt6 numpy soundfile msgpack zstandard

      # ---- Build CLI (onedir, console) ----
      - name: Build CLI
        shell: pwsh
        run: pyinstaller --noconfirm --clean `
               --onedir --console `
               --name alak `
               --paths . `
               cli/main.py `
               --collect-all core `
               --collect-all formats `
               --collect-all cli

      # ---- Build GUI (onedir, windowed) ----
      - name: Build GUI
        shell: pwsh
        run: pyinstaller --noconfirm --clean `
               --onedir --windowed `
               --name "ALAK-Encoder-win" `
               --paths . `
               app/alak_qt.py `
               --collect-all PyQt6 `
               --collect-all numpy `
               --collect-all soundfile `
               --collect-binaries soundfile `
               --collect-all core `
               --collect-all formats `
               --collect-all cli `
               --hidden-import core.encoder `
               --hidden-import core.decoder `
               --hidden-import core.dp_auto `
               --hidden-import formats.alak_io `
               --hidden-import cli.compress_alak_file


      # --- Stage files we want to ship ---
      - name: Stage package
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path pkg | Out-Null
          Copy-Item "dist/alak.exe"             "pkg/alak.exe" -Force
          Copy-Item "dist/ALAK-Encoder-win.exe" "pkg/ALAK-Encoder-win.exe" -Force

          # Write a double-clickable CLI launcher that keeps the console open
          $bat = @(
            "@echo off",
            "cd /d %~dp0",
            "title ALAK CLI (shell)",
            "echo Running: alak.exe --help",
            "echo.",
            "alak.exe --help",
            "echo.",
            "pause"
          )
          $bat | Set-Content -Path "pkg/ALAK CLI (shell).cmd" -Encoding ASCII

          # README (avoid indentation quirks by joining lines)
          $ver = "${{ github.ref_name }}"
          $readmeLines = @(
            "ALAK for Windows  $ver",
            "",
            "GUI:",
            "  1) Open the folder: ALAK-Encoder-win",
            "  2) Double-click: ALAK-Encoder-win.exe",
            "",
            "CLI:",
            "  - Double-click: ALAK CLI (shell).cmd",
            "    (or open PowerShell here and run: .\alak\alak.exe --help)",
            "",
            "SmartScreen: If warned, click 'More info' -> 'Run anyway' (unsigned app)."
          )
          $readme = $readmeLines -join "`r`n"
          Set-Content -Path "pkg\README_windows.txt" -Value $readme -Encoding UTF8

      # --- Zip + checksums ---
      - name: Zip + checksums
        shell: pwsh
        run: |
          $zip = "pkg/ALAK-Encoder-win-$env:VERSION.zip"
          if (Test-Path $zip) { Remove-Item $zip -Force }
          Compress-Archive -Path "pkg\*" -DestinationPath $zip
          (Get-FileHash -Path $zip -Algorithm SHA256).Hash + "  " + (Split-Path -Leaf $zip) `
            | Set-Content -Path "pkg/SHA256SUMS.txt" -Encoding ascii

      # --- Publish/replace assets on the tag ---
      - name: Publish release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          allowUpdates: true
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: |
            pkg/ALAK-Encoder-win-${{ env.VERSION }}.zip
            pkg/SHA256SUMS.txt
            pkg/README_windows.txt
